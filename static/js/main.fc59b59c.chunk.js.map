{"version":3,"sources":["Functions/Room.js","Functions/Auxiliary.js","Functions/Generation.js","Functions/Simulation.js","Functions/Movement.js","App.js","index.js"],"names":["map","ctx","obstacles","Room","className","id","height","width","SwitchMode","document","body","style","backgroundColor","GenerateRoom","getElementById","getContext","font","length","window","confirm","X","GetRandomInt","Y","console","log","ResetRoom","clearRect","min","max","Math","ceil","floor","random","fill","a","fillRect","x","y","w","h","clear","ClearCanvas","overlaps","b","x1","x2","y1","y2","GenerateWithoutOverlap","trials","flag","j","userTimer","afterDock","RTC","Dock","GenerateObstacles","fillStyle","lineWidth","roomX","roomY","amount","i","obstW","obstH","obstX","obstY","Gen","push","GenerateRTC","minW","minH","maxW","maxH","fillText","alert","pop","moveRight","mode","makeMove","moveLeft","moveUp","moveDown","HasDistance","direction","obj","loop","stadium","intervalTime","EnterDockingStation","callback","setInterval","clearInterval","MoveToStart","CleanRoom","CleanRoomLeft","StartCleaning","ResumeCleaning","clearBut","parseInt","value","isNaN","borderColor","textContent","App","props","state","clicked","onClick","ClearRoom","setState","StopCleaning","color","position","right","marginTop","placeholder","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fc59b59c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {GetRandomInt} from './Auxiliary'\r\n\r\nvar map;\r\nvar ctx;\r\nvar obstacles = [];\r\n\r\nexport default function Room(){\r\n    return(\r\n    <div className=\"WorkTable\">  \r\n        <canvas id=\"map\" height=\"200\" width=\"200\"></canvas>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport function SwitchMode() {\r\n    if (document.body.style.backgroundColor === \"black\") document.body.style.backgroundColor = \"white\";\r\n        else document.body.style.backgroundColor = \"black\";  \r\n}\r\n\r\nexport function GenerateRoom() {\r\n    map = document.getElementById(\"map\");\r\n    ctx = map.getContext(\"2d\");\r\n    obstacles = [];\r\n    var minMapX = 300, minMapY = 300, maxMapX = 1200, maxMapY = 1200;\r\n    ctx.font = \"20px Arial\";\r\n    if (obstacles.length > 0) { if (window.confirm(\"Are you sure you want to regenerate the room?\")) {\r\n        var X = GetRandomInt(minMapX, maxMapX), Y = GetRandomInt(minMapY, maxMapY);\r\n        console.log(X, Y);\r\n        map.width = X;\r\n        map.height = Y;\r\n        obstacles = [];\r\n    } }\r\n    else {\r\n        X = GetRandomInt(minMapX, maxMapX);\r\n        Y = GetRandomInt(minMapY, maxMapY);\r\n        map.width = X;\r\n        map.height = Y;\r\n    }\r\n    \r\n}\r\n\r\nexport function ResetRoom() {\r\n    obstacles = [];\r\n    if (window.confirm(\"Are you sure you want to reset?\")) {\r\n        ctx.clearRect(0, 0, map.width, map.height);\r\n        map.width = 200;\r\n        map.height = 200;\r\n        obstacles.length = 0;\r\n    }\r\n}\r\n\r\nexport {map};\r\nexport {ctx};\r\n","import {map, ctx} from './Room'\r\n\r\n//Get random int in range\r\nexport function GetRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n//Fill rectangle\r\nexport function fill(a){\r\n    ctx.fillRect(a.x, a.y, a.w, a.h);   \r\n}\r\n\r\n//Clear rectangle\r\nexport function clear(a){\r\n    ctx.clearRect(a.x, a.y, a.w, a.h);   \r\n}\r\n\r\n//Clear Canvas Button\r\nexport function ClearCanvas() {\r\n    ctx.clearRect(0, 0, map.width, map.height);\r\n}\r\n\r\n\r\n//Check rectangle overlapping\r\nfunction overlaps(a, b) {\r\n\tif (a.x1 >= b.x2 || b.x1 >= a.x2) return false;\r\n\tif (a.y1 >= b.y2 || b.y1 >= a.y2) return false;\r\n\treturn true;\r\n}\r\n\r\n\r\n//Generate object w/o overlapping\r\nexport function GenerateWithoutOverlap(w, h, x, y, trials, obstacles) {\r\n    var flag = true;\r\n    while (flag) {\r\n                trials++;\r\n                if (trials>20) break;\r\n                for(var j = 0; j<obstacles.length; j++){\r\n\r\n                    var a = {};\r\n                    a.x1 = obstacles[j].x;\r\n                    a.y1 = obstacles[j].y;\r\n                    a.x2 = obstacles[j].x+obstacles[j].w;\r\n                    a.y2 = obstacles[j].y+obstacles[j].h;\r\n\r\n                    var b = {};\r\n                    b.x1 = x;\r\n                    b.y1 = y;\r\n                    b.x2 = x+w;\r\n                    b.y2 = y+h;\r\n\r\n                        if(overlaps(a, b)){\r\n                            x = GetRandomInt(0, map.width - w);\r\n                            y = GetRandomInt(0, map.height - h);\r\n                            b.x1 = x;\r\n                            b.y1 = y;\r\n                            b.x2 = x+w;\r\n                            b.y2 = y+h;\r\n                            flag = true;\r\n                            break;\r\n                        }\r\n                    flag = false;\r\n                }\r\n            }\r\n    return [b, trials];\r\n}","import { GetRandomInt, ClearCanvas, GenerateWithoutOverlap, fill } from './Auxiliary'\r\n\r\nvar obstacles = [];\r\nvar RTC = {}, Dock = {};\r\n\r\n\r\n\r\nexport function GenerateObstacles() {\r\n    var map = document.getElementById(\"map\");\r\n    var ctx = map.getContext(\"2d\");\r\n    obstacles = [];\r\n    ctx.fillStyle = \"red\";\r\n    ctx.clearRect(0, 0, map.width, map.height);\r\n    ctx.lineWidth = 2;\r\n    var roomX = map.width, roomY = map.height,\r\n    amount = GetRandomInt(4, 10); //Obstacles amount\r\n\r\n    //Obstacle placement\r\n    for (var i=0; i < amount; i++) {\r\n        var obstW = GetRandomInt(30, 80),\r\n        obstH = GetRandomInt(30, 80), //Desired obstacle\r\n        obstX = GetRandomInt(0, roomX - obstW),\r\n        obstY = GetRandomInt(0, roomY - obstH);\r\n        var trials = 0;\r\n        if(obstacles.length>0){\r\n            //While there is overlap, generate new coords\r\n            var Gen = GenerateWithoutOverlap(obstW, obstH, obstX, obstY, trials, obstacles);\r\n            var b = Gen[0];\r\n            \r\n            if(Gen[1]<=20){\r\n                obstacles.push({\r\n                    w: b.x2-b.x1,\r\n                    h: b.y2-b.y1,\r\n                    x: b.x1,\r\n                    y: b.y1\r\n                });\r\n            }\r\n            else break;\r\n        }\r\n        else {\r\n            obstacles.push({\r\n                w: obstW,\r\n                h: obstH,\r\n                x: obstX,\r\n                y: obstY\r\n            });    \r\n        }    \r\n        ctx.fillStyle = \"red\";\r\n        fill(obstacles[i]);   \r\n\r\n    }\r\n   // console.log(obstacles);\r\n}\r\n\r\nexport function GenerateRTC() {\r\n    var map = document.getElementById(\"map\"), ctx = map.getContext(\"2d\"), trials = 0, roomX = map.width, roomY = map.height;\r\n    //--map\r\n       \r\n    var minW = 40, minH = 40, maxW = 90, maxH = 90;\r\n    RTC.w = GetRandomInt(minW, maxW); RTC.h = GetRandomInt(minH, maxH);\r\n    RTC.x = GetRandomInt(0, roomX-RTC.w); RTC.y = GetRandomInt(0, roomY-RTC.h);\r\n    //--robot\r\n    \r\n    var Gen = GenerateWithoutOverlap(RTC.w, RTC.h, RTC.x, RTC.y, trials, obstacles);\r\n    var b = Gen[0];\r\n\r\n    if(Gen[1]<=20){\r\n        obstacles.push(RTC);\r\n        RTC.w = b.x2-b.x1; RTC.h = b.y2-b.y1; RTC.x = b.x1; RTC.y = b.y1;\r\n        ctx.fillStyle = \"#0d880d\";\r\n        fill(RTC);\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillText(\"R\", RTC.x+RTC.w/2-3, RTC.y+RTC.h/2+3); \r\n    //--robot fill\r\n    }\r\n    else {\r\n        alert(\"Can't place robot! Clearing canvas..\");\r\n        ClearCanvas();\r\n        obstacles = [];\r\n    }\r\n    minW = 50;\r\n    minH = 50;\r\n    maxW = RTC.w;\r\n    maxH = RTC.h;\r\n    \r\n    Dock.w = GetRandomInt(minW, maxW); Dock.h = GetRandomInt(minH, maxH);\r\n    Dock.x = GetRandomInt(0, roomX-Dock.w); Dock.y = GetRandomInt(0, roomY-Dock.h);\r\n    \r\n    trials = 0;\r\n    Gen = GenerateWithoutOverlap(RTC.w, RTC.h, RTC.x, RTC.y, trials, obstacles);\r\n    b = Gen[0];\r\n    //--docking st\r\n    \r\n    if(Gen[1]<=20){\r\n        Dock.w = b.x2-b.x1; Dock.h = b.y2-b.y1; Dock.x = b.x1; Dock.y = b.y1;\r\n        ctx.fillStyle = \"#00c600\";\r\n        fill(Dock);\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillText(\"D\", Dock.x+Dock.w/2-3, Dock.y+Dock.h/2+3);   \r\n        obstacles.pop();\r\n    //--docking st fill\r\n    }\r\n    else {\r\n        alert(\"Can't place docking station! Clearing canvas..\");\r\n        ClearCanvas();\r\n        obstacles = [];\r\n    }\r\n\r\n}\r\nexport {RTC};\r\nexport {Dock};\r\nexport {obstacles}","import {RTC, Dock} from './Generation'\r\nimport {map, ctx} from './Room'\r\nimport {fill} from './Auxiliary'\r\nimport {moveLeft, moveDown, moveRight, moveUp, HasDistance} from './Movement'\r\n//import {moveRightDock, moveLeftDock, moveDownDock, moveUpDock} from './Movement'\r\n\r\nvar userTimer;\r\nvar afterDock;\r\nvar intervalTime = 500;\r\nvar loop;\r\nvar stadium;\r\n\r\nfunction checkSurroundings(){\r\n    if(HasDistance(\"right\", \"dock\"))\r\n        if(HasDistance(\"left\", \"dock\"))\r\n            if(HasDistance(\"up\", \"dock\"))\r\n                if(HasDistance(\"down\", \"dock\"))\r\n\r\n                    if(HasDistance(\"right\", \"wall\"))\r\n                        if(HasDistance(\"left\", \"wall\"))\r\n                            if(HasDistance(\"up\", \"wall\"))\r\n                                if(HasDistance(\"down\", \"wall\"))\r\n                                    return \"canMove\";\r\n                                else return \"down\", \"wall\";\r\n                            else return \"up\", \"wall\";\r\n                        else return \"left\", \"wall\";\r\n                    else return \"right\", \"wall\";\r\n                \r\n                else return \"down\", \"dock\";\r\n            else return \"up\", \"dock\";\r\n        else return \"left\", \"dock\";\r\n    else return \"right\", \"dock\";   \r\n}\r\n\r\n\r\nfunction EnterDockingStation(afterDock, callback){\r\n    //Enter DS   \r\n    if(HasDistance(\"right\", \"dock\")) loop = setInterval(() => {\r\n    if(HasDistance(\"right\", \"dock\")) moveRight(afterDock, \"simple\");\r\n        else {\r\n            moveRight(afterDock, \"dock\");\r\n            clearInterval(loop);\r\n            if(HasDistance(\"up\", \"dock\")) loop = setInterval(() => {\r\n                if(HasDistance(\"up\", \"dock\")) moveUp(afterDock, \"simple\");\r\n                else {\r\n                moveUp(afterDock, \"dock\");\r\n                clearInterval(loop);\r\n                if(typeof callback == 'function') callback();\r\n                }\r\n            }, intervalTime)\r\n            else loop = setInterval(() => {\r\n                if(HasDistance(\"down\", \"dock\")) moveDown(afterDock, \"simple\");\r\n                else {\r\n                    moveDown(afterDock, \"dock\");\r\n                    clearInterval(loop);\r\n                    if(typeof callback == 'function') callback();\r\n                }\r\n            }, intervalTime)\r\n        }\r\n    }, intervalTime)\r\n\r\n    else loop = setInterval(() => {\r\n        if(HasDistance(\"left\", \"dock\")) moveLeft(afterDock, \"simple\");\r\n        else {\r\n            moveLeft(afterDock, \"dock\");\r\n            clearInterval(loop);\r\n            if(HasDistance(\"up\", \"dock\")) loop = setInterval(() => {\r\n                if(HasDistance(\"up\", \"dock\")) moveUp(afterDock, \"simple\");\r\n                else {\r\n                moveUp(afterDock, \"dock\");\r\n                clearInterval(loop);\r\n                if(typeof callback == 'function') callback();\r\n                }\r\n            }, intervalTime)\r\n            else loop = setInterval(() => {\r\n                if(HasDistance(\"down\", \"dock\")) moveDown(afterDock, \"simple\");\r\n                else {\r\n                    moveDown(afterDock, \"dock\");\r\n                    clearInterval(loop);\r\n                    if(typeof callback == 'function') callback();\r\n                }\r\n            }, intervalTime)\r\n        }\r\n    }, intervalTime)\r\n\r\n}\r\n\r\n\r\n\r\nfunction MoveToStart(callback){\r\n    //Move to starting point(0, 0)\r\n    afterDock = true;\r\n    stadium = \"MoveToStart\";\r\n    if(!HasDistance(\"left\", \"dock\"))\r\n        if(!HasDistance(\"down\",\"dock\") && !HasDistance(\"right\", \"dock\")){\r\n            console.log(\"escaped\")\r\n        moveUp(afterDock, \"simple\");\r\n        MoveToStart(CleanRoom);\r\n        }\r\n            else {\r\n            if(HasDistance(\"left\", \"wall\")) loop = setInterval(() => { \r\n                if(HasDistance(\"left\", \"wall\")) moveLeft(afterDock, \"simple\");\r\n                else {\r\n                    moveLeft(afterDock, \"wall\");\r\n                    clearInterval(loop);\r\n                    loop = setInterval(() => {\r\n                        if(HasDistance(\"up\", \"wall\")) moveUp(afterDock, \"simple\");\r\n                        else {\r\n                            moveUp(afterDock, \"wall\");\r\n                            clearInterval(loop);\r\n                            console.log(\"On start\");\r\n                            if(typeof callback == 'function') callback();\r\n                        }\r\n                    }, intervalTime)\r\n                }\r\n            }, intervalTime)\r\n            else {\r\n                moveLeft(afterDock, \"wall\");\r\n                loop = setInterval(() => {\r\n                    if(HasDistance(\"up\", \"wall\")) moveUp(afterDock, \"simple\");\r\n                    else {\r\n                        moveUp(afterDock, \"wall\");\r\n                        clearInterval(loop);\r\n                        console.log(\"On start\");\r\n                        if(typeof callback == 'function') callback();\r\n                    }\r\n                }, intervalTime)\r\n            }\r\n\r\n                }\r\n}\r\n\r\n\r\nfunction CleanRoom(){\r\n    //Clean whole room\r\n    afterDock = true;\r\n    stadium = \"CleaningRight\";\r\n    switch (checkSurroundings()){\r\n            \r\n\r\n\r\n\r\n\r\n    }\r\n    loop = setInterval(() => {\r\n        if(RTC.y+RTC.h < map.height) \r\n        if(HasDistance(\"right\", \"wall\")) moveRight(afterDock, \"simple\");\r\n        else {\r\n            moveRight(afterDock, \"wall\"); \r\n            clearInterval(loop);\r\n            if(HasDistance(\"down\", \"wall\")) moveDown(afterDock, \"simple\"); else moveDown(afterDock, \"wall\");  \r\n            stadium = \"CleaningLeft\";\r\n            loop = setInterval(() => {\r\n            if(HasDistance(\"left\", \"wall\")) moveLeft(afterDock, \"simple\");\r\n            else{\r\n                moveLeft(afterDock, \"wall\");\r\n                if(HasDistance(\"down\", \"wall\")) moveDown(afterDock, \"simple\"); else moveDown(afterDock, \"wall\");\r\n                clearInterval(loop);\r\n                CleanRoom();\r\n            }\r\n        }, intervalTime)\r\n        }\r\n        else {\r\n            clearInterval(loop);\r\n            loop = setInterval(() => {\r\n                if(HasDistance(\"right\", \"wall\")) moveRight(afterDock, \"simple\");\r\n                else{\r\n                    moveRight(afterDock, \"wall\");\r\n                    console.log(\"Finished cleaning\");\r\n                    ctx.fillStyle = \"#00c600\";\r\n                    fill(Dock);\r\n                    clearInterval(loop);\r\n                    EnterDockingStation(true);\r\n                }\r\n            }, intervalTime);\r\n            \r\n        }\r\n    }, intervalTime)\r\n}\r\n\r\nfunction CleanRoomLeft(){\r\n    //Clean whole room\r\n    afterDock = true;\r\n    stadium = \"CleaningLeft\";\r\n    loop = setInterval(() => {\r\n        if(RTC.y+RTC.h < map.height) \r\n        if(HasDistance(\"left\", \"wall\")) moveLeft(afterDock, \"simple\");\r\n        else {\r\n            moveLeft(afterDock, \"wall\"); \r\n            if(HasDistance(\"down\", \"wall\")) moveDown(afterDock, \"simple\"); else moveDown(afterDock, \"wall\");  \r\n            stadium = \"CleaningRight\";\r\n            clearInterval(loop);            \r\n            loop = setInterval(() => {\r\n            if(HasDistance(\"right\", \"wall\")) moveRight(afterDock, \"simple\");\r\n            else{\r\n                moveRight(afterDock, \"wall\");\r\n                if(HasDistance(\"down\", \"wall\")) moveDown(afterDock, \"simple\"); else moveDown(afterDock, \"wall\");\r\n                clearInterval(loop);\r\n                CleanRoomLeft();\r\n            }\r\n        }, intervalTime)\r\n        }\r\n        else {\r\n            clearInterval(loop);\r\n            ctx.fillStyle = \"#00c600\";\r\n            fill(Dock);\r\n            console.log(\"Finished cleaning\");\r\n            EnterDockingStation(true);\r\n        }\r\n    }, intervalTime)\r\n}\r\n\r\nfunction StartCleaning(){\r\n    //Go to start point(0, 0) after Docking to DS, then clean whole room\r\n    MoveToStart(CleanRoom);\r\n}\r\n\r\n\r\nexport function ResumeCleaning(){\r\n    console.log(stadium);\r\n    var clearBut = document.getElementById(\"controlBut\");\r\n    userTimer = parseInt(document.getElementById(\"intervalInput\").value);\r\n    if(!isNaN(userTimer)) intervalTime = userTimer;\r\n    clearBut.style.backgroundColor = \"#FC6767\";\r\n    clearBut.style.borderColor = \"red\";\r\n    clearBut.textContent = \"■ Stop Cleaning\";\r\n    switch (stadium){\r\n        case \"EnterDock\":\r\n            EnterDockingStation(StartCleaning);\r\n            break;\r\n        case \"MoveToStart\":\r\n            StartCleaning();\r\n            break;\r\n        case \"CleaningRight\":\r\n            CleanRoom();\r\n            break;\r\n        case \"CleaningLeft\":\r\n            CleanRoomLeft();\r\n            break;\r\n        default:\r\n            EnterDockingStation(StartCleaning);\r\n            break;\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport function StopCleaning(){\r\n    console.log(stadium);\r\n    var clearBut = document.getElementById(\"controlBut\");\r\n    clearInterval(loop);\r\n    clearBut.style.backgroundColor = \"#FFAE57\";\r\n    clearBut.style.borderColor = \"#FF8400\";\r\n    clearBut.textContent = \"▶ Resume Cleaning\";\r\n}\r\n\r\nexport default function ClearRoom(){ \r\n    var clearBut = document.getElementById(\"controlBut\");\r\n    userTimer = parseInt(document.getElementById(\"intervalInput\").value);\r\n    if(!isNaN(userTimer)) intervalTime = userTimer;\r\n\r\n    //main cleaning function; first enter docking station, then go to start point(0, 0), then clean whole room\r\n    map.style.backgroundColor = \"#FEC3C3\";\r\n    EnterDockingStation(false, StartCleaning);\r\n    clearBut.style.backgroundColor = \"#FC6767\";\r\n    clearBut.style.borderColor = \"red\";\r\n    clearBut.textContent = \"■ Stop Cleaning\";\r\n}\r\n","import {RTC, Dock, obstacles} from './Generation'\r\nimport {fill, clear} from './Auxiliary'\r\nimport {ctx, map} from './Room'\r\n\r\n//If entered docking, clean the floor, if not - just move\r\nexport function moveRight(afterDock, mode){\r\n    switch (mode){\r\n        case \"simple\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            RTC.x += RTC.w;\r\n            ctx.fillStyle = \"#0d880d\";\r\n            fill(RTC);\r\n            break;\r\n        case \"dock\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            console.log(\"right\")\r\n            RTC.x += Dock.x-RTC.x-RTC.w;\r\n            ctx.fillStyle = \"#0d880d\";\r\n            fill(RTC);\r\n            break;\r\n        case \"wall\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            RTC.x += map.width-RTC.x-RTC.w;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nfunction makeMove(){\r\n    ctx.fillStyle = \"#0d880d\";\r\n    fill(RTC);\r\n}\r\n\r\nexport function moveLeft(afterDock, mode){\r\n    switch (mode){\r\n        case \"simple\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            RTC.x -= RTC.w;\r\n            makeMove();\r\n            break;\r\n        case \"dock\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            console.log(\"left\")\r\n            RTC.x -= RTC.x-Dock.x-Dock.w;\r\n            makeMove();\r\n            break;\r\n        case \"wall\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            RTC.x -= RTC.x;\r\n            makeMove();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function moveUp(afterDock, mode){\r\n    switch (mode){\r\n        case \"simple\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            RTC.y -= RTC.h;\r\n            makeMove();\r\n            break;\r\n        case \"dock\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            RTC.y -= RTC.y-Dock.y;\r\n            makeMove();\r\n            break;\r\n        case \"wall\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            RTC.y -= RTC.y;\r\n            makeMove();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function moveDown(afterDock, mode){\r\n    switch (mode){\r\n        case \"simple\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            RTC.y += RTC.h;\r\n            makeMove();\r\n            break;\r\n        case \"dock\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            RTC.y += Dock.y+Dock.h-RTC.y-RTC.h;\r\n            makeMove();\r\n            break;\r\n        case \"wall\":\r\n            ctx.fillStyle = \"#D7FCD9\";\r\n            afterDock ? fill(RTC) : clear(RTC);\r\n            RTC.y += map.height - RTC.y-RTC.h;\r\n            makeMove();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\n\r\nexport function HasDistance(direction, obj){\r\n    switch (obj){\r\n        case \"dock\":\r\n            switch (direction){\r\n                case \"right\": \r\n                        if(RTC.x + RTC.w <= Dock.x) return true;\r\n                        else return false;\r\n                case \"left\": \r\n                        if(RTC.x - RTC.w > Dock.x+Dock.w) return true;\r\n                        else return false;\r\n                case \"up\": \r\n                        if(RTC.y - RTC.h > Dock.y+Dock.h) return true;\r\n                        else return false;\r\n                case \"down\": \r\n                        if(RTC.y + RTC.h <= Dock.y) return true;\r\n                        else return false;\r\n                default: \r\n                        return true;\r\n                }\r\n        case \"wall\":\r\n            switch (direction){\r\n                case \"right\":\r\n                        if(RTC.x + 2*RTC.w < map.width) return true;\r\n                        else return false;\r\n                case \"left\":\r\n                        if(RTC.x - RTC.w > 0) return true;\r\n                        else return false;\r\n                case \"up\": \r\n                        if(RTC.y - RTC.h > 0) return true;\r\n                        else return false;\r\n                case \"down\": \r\n                        if(RTC.y + RTC.h < map.height) return true;\r\n                        else return false;\r\n                default: \r\n                        return true;\r\n                }\r\n        }\r\n\r\n}","import React, { Component } from 'react'\nimport './App.css';\nimport { GenerateObstacles, GenerateRTC } from './Functions/Generation';\nimport Room, {SwitchMode, GenerateRoom, ResetRoom} from './Functions/Room'\nimport {ClearCanvas} from './Functions/Auxiliary'\nimport ClearRoom, { ResumeCleaning, StopCleaning } from './Functions/Simulation'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      clicked: 0\n    };\n  }\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header>\n          <button className=\"ModeButton\" onClick={SwitchMode}>Dark/Light mode</button>    \n            <h1 className=\"mainTitle\">RTC Simulation</h1>\n      </header>    \n      <div className=\"controlButtonsBlock\">               \n        <button className=\"controlButton\" onClick={GenerateRoom}>Generate room</button>\n        <button className=\"controlButton\" onClick={ResetRoom}>Reset room</button>\n        <button className=\"controlButton\" onClick={GenerateObstacles}>Generate obstacles</button>\n        <button className=\"controlButton\" onClick={GenerateRTC}>Generate RTC and DS</button>\n        <button className=\"controlButton\" onClick={ClearCanvas}>Clear canvas</button>\n        <button className=\"controlButton\" id=\"controlBut\" onClick={() => {\n          if(this.state.clicked === 0) { ClearRoom(); this.setState({ clicked: this.state.clicked+1 }); }\n          else if(this.state.clicked === 1) { StopCleaning(); this.setState({ clicked: this.state.clicked+1 }); }\n          else { ResumeCleaning(); this.setState({clicked: 1}) }\n        }\n        }>▶ Start Cleaning</button>\n      </div> \n\n        <div>\n          <p style={{color: \"orange\", position: \"absolute\", right: \"290px\", marginTop: \"32px\"}}>Interval (default 500): </p>\n          <input placeholder=\"ms...\" id=\"intervalInput\" />\n        </div>      \n      <Room />\n\n      <footer>\n        <p className=\"footerText\">© Made by Adri9wa, inspired by Anatolii</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}