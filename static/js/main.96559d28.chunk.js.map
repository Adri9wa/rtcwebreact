{"version":3,"sources":["Functions/Room.js","Functions/Auxiliary.js","Functions/Generation.js","Functions/Simulation.js","Functions/Movement.js","App.js","index.js"],"names":["map","ctx","obstacles","Room","className","id","height","width","SwitchMode","document","body","style","backgroundColor","GenerateRoom","getElementById","getContext","font","length","window","confirm","X","GetRandomInt","Y","console","log","ResetRoom","clearRect","min","max","Math","ceil","floor","random","fill","a","fillRect","x","y","w","h","clear","ClearCanvas","overlaps","b","x1","x2","y1","y2","GenerateWithoutOverlap","trials","flag","j","afterDock","RTC","Dock","GenerateObstacles","fillStyle","lineWidth","roomX","roomY","amount","i","obstW","obstH","obstX","obstY","Gen","push","GenerateRTC","minW","minH","maxW","maxH","fillText","alert","pop","moveRight","moveLeft","moveUp","moveDown","moveUpDock","moveDownDock","HasDistance","direction","intervalTime","EnterDockingStation","callback","loop","setInterval","clearInterval","CleanRoom","StartCleaning","MoveToStart","ClearRoom","App","onClick","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.96559d28.chunk.js","sourcesContent":["import React from 'react'\r\nimport {GetRandomInt} from './Auxiliary'\r\n\r\nvar map;\r\nvar ctx;\r\nvar obstacles = [];\r\n\r\nexport default function Room(){\r\n    return(\r\n    <div className=\"WorkTable\">  \r\n        <canvas id=\"map\" height=\"200\" width=\"200\"></canvas>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport function SwitchMode() {\r\n    if (document.body.style.backgroundColor === \"black\") document.body.style.backgroundColor = \"white\";\r\n        else document.body.style.backgroundColor = \"black\";  \r\n}\r\n\r\nexport function GenerateRoom() {\r\n    map = document.getElementById(\"map\");\r\n    ctx = map.getContext(\"2d\");\r\n    obstacles = [];\r\n    var minMapX = 300, minMapY = 300, maxMapX = 1200, maxMapY = 1200;\r\n    ctx.font = \"20px Arial\";\r\n    if (obstacles.length > 0) { if (window.confirm(\"Are you sure you want to regenerate the room?\")) {\r\n        var X = GetRandomInt(minMapX, maxMapX), Y = GetRandomInt(minMapY, maxMapY);\r\n        console.log(X, Y);\r\n        map.width = X;\r\n        map.height = Y;\r\n        obstacles = [];\r\n    } }\r\n    else {\r\n        X = GetRandomInt(minMapX, maxMapX);\r\n        Y = GetRandomInt(minMapY, maxMapY);\r\n        map.width = X;\r\n        map.height = Y;\r\n    }\r\n    \r\n}\r\n\r\nexport function ResetRoom() {\r\n    obstacles = [];\r\n    if (window.confirm(\"Are you sure you want to reset?\")) {\r\n        ctx.clearRect(0, 0, map.width, map.height);\r\n        map.width = 200;\r\n        map.height = 200;\r\n        obstacles.length = 0;\r\n    }\r\n}\r\n\r\nexport {map};\r\nexport {ctx};\r\n","import {map, ctx} from './Room'\r\n\r\n//Get random int in range\r\nexport function GetRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n//Fill rectangle\r\nexport function fill(a){\r\n    ctx.fillRect(a.x, a.y, a.w, a.h);   \r\n}\r\n\r\n//Clear rectangle\r\nexport function clear(a){\r\n    ctx.clearRect(a.x, a.y, a.w, a.h);   \r\n}\r\n\r\n//Clear Canvas Button\r\nexport function ClearCanvas() {\r\n    ctx.clearRect(0, 0, map.width, map.height);\r\n}\r\n\r\n\r\n//Check rectangle overlapping\r\nfunction overlaps(a, b) {\r\n\tif (a.x1 >= b.x2 || b.x1 >= a.x2) return false;\r\n\tif (a.y1 >= b.y2 || b.y1 >= a.y2) return false;\r\n\treturn true;\r\n}\r\n\r\n\r\n//Generate object w/o overlapping\r\nexport function GenerateWithoutOverlap(w, h, x, y, trials, obstacles) {\r\n    var flag = true;\r\n    while (flag) {\r\n                trials++;\r\n                if (trials>20) break;\r\n                for(var j = 0; j<obstacles.length; j++){\r\n\r\n                    var a = {};\r\n                    a.x1 = obstacles[j].x;\r\n                    a.y1 = obstacles[j].y;\r\n                    a.x2 = obstacles[j].x+obstacles[j].w;\r\n                    a.y2 = obstacles[j].y+obstacles[j].h;\r\n\r\n                    var b = {};\r\n                    b.x1 = x;\r\n                    b.y1 = y;\r\n                    b.x2 = x+w;\r\n                    b.y2 = y+h;\r\n\r\n                        if(overlaps(a, b)){\r\n                            x = GetRandomInt(0, map.width - w);\r\n                            y = GetRandomInt(0, map.height - h);\r\n                            b.x1 = x;\r\n                            b.y1 = y;\r\n                            b.x2 = x+w;\r\n                            b.y2 = y+h;\r\n                            flag = true;\r\n                            break;\r\n                        }\r\n                    flag = false;\r\n                }\r\n            }\r\n    return [b, trials];\r\n}","import { GetRandomInt, ClearCanvas, GenerateWithoutOverlap, fill } from './Auxiliary'\r\n\r\nvar obstacles = [];\r\nvar RTC = {}, Dock = {};\r\n\r\n\r\n\r\nexport function GenerateObstacles() {\r\n    var map = document.getElementById(\"map\");\r\n    var ctx = map.getContext(\"2d\");\r\n    obstacles = [];\r\n    ctx.fillStyle = \"red\";\r\n    ctx.clearRect(0, 0, map.width, map.height);\r\n    ctx.lineWidth = 2;\r\n    var roomX = map.width, roomY = map.height,\r\n    amount = GetRandomInt(4, 10); //Obstacles amount\r\n\r\n    //Obstacle placement\r\n    for (var i=0; i < amount; i++) {\r\n        var obstW = GetRandomInt(30, 80),\r\n        obstH = GetRandomInt(30, 80), //Desired obstacle\r\n        obstX = GetRandomInt(0, roomX - obstW),\r\n        obstY = GetRandomInt(0, roomY - obstH);\r\n        var trials = 0;\r\n        if(obstacles.length>0){\r\n            //While there is overlap, generate new coords\r\n            var Gen = GenerateWithoutOverlap(obstW, obstH, obstX, obstY, trials, obstacles);\r\n            var b = Gen[0];\r\n            \r\n            if(Gen[1]<=20){\r\n                obstacles.push({\r\n                    w: b.x2-b.x1,\r\n                    h: b.y2-b.y1,\r\n                    x: b.x1,\r\n                    y: b.y1\r\n                });\r\n            }\r\n            else break;\r\n        }\r\n        else {\r\n            obstacles.push({\r\n                w: obstW,\r\n                h: obstH,\r\n                x: obstX,\r\n                y: obstY\r\n            });    \r\n        }    \r\n        ctx.fillStyle = \"red\";\r\n        fill(obstacles[i]);   \r\n\r\n    }\r\n   // console.log(obstacles);\r\n}\r\n\r\nexport function GenerateRTC() {\r\n    var map = document.getElementById(\"map\"), ctx = map.getContext(\"2d\"), trials = 0, roomX = map.width, roomY = map.height;\r\n    //--map\r\n       \r\n    var minW = 40, minH = 40, maxW = 90, maxH = 90;\r\n    RTC.w = GetRandomInt(minW, maxW); RTC.h = GetRandomInt(minH, maxH);\r\n    RTC.x = GetRandomInt(0, roomX-RTC.w); RTC.y = GetRandomInt(0, roomY-RTC.h);\r\n    //--robot\r\n    \r\n    var Gen = GenerateWithoutOverlap(RTC.w, RTC.h, RTC.x, RTC.y, trials, obstacles);\r\n    var b = Gen[0];\r\n\r\n    if(Gen[1]<=20){\r\n        obstacles.push(RTC);\r\n        RTC.w = b.x2-b.x1; RTC.h = b.y2-b.y1; RTC.x = b.x1; RTC.y = b.y1;\r\n        ctx.fillStyle = \"#0d880d\";\r\n        fill(RTC);\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillText(\"R\", RTC.x+RTC.w/2-3, RTC.y+RTC.h/2+3); \r\n    //--robot fill\r\n    }\r\n    else {\r\n        alert(\"Can't place robot! Clearing canvas..\");\r\n        ClearCanvas();\r\n        obstacles = [];\r\n    }\r\n    minW = 50;\r\n    minH = 50;\r\n    maxW = RTC.w;\r\n    maxH = RTC.h;\r\n    \r\n    Dock.w = GetRandomInt(minW, maxW); Dock.h = GetRandomInt(minH, maxH);\r\n    Dock.x = GetRandomInt(0, roomX-Dock.w); Dock.y = GetRandomInt(0, roomY-Dock.h);\r\n    \r\n    trials = 0;\r\n    Gen = GenerateWithoutOverlap(RTC.w, RTC.h, RTC.x, RTC.y, trials, obstacles);\r\n    b = Gen[0];\r\n    //--docking st\r\n    \r\n    if(Gen[1]<=20){\r\n        Dock.w = b.x2-b.x1; Dock.h = b.y2-b.y1; Dock.x = b.x1; Dock.y = b.y1;\r\n        ctx.fillStyle = \"#00c600\";\r\n        fill(Dock);\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillText(\"D\", Dock.x+Dock.w/2-3, Dock.y+Dock.h/2+3);   \r\n        obstacles.pop();\r\n    //--docking st fill\r\n    }\r\n    else {\r\n        alert(\"Can't place docking station! Clearing canvas..\");\r\n        ClearCanvas();\r\n        obstacles = [];\r\n    }\r\n\r\n}\r\nexport {RTC};\r\nexport {Dock};\r\nexport {obstacles}","import {RTC, Dock} from './Generation'\r\nimport {map} from './Room'\r\nimport {moveLeft, moveDown, moveRight, moveUp, HasDistance} from './Movement'\r\nimport {moveRightDock, moveLeftDock, moveDownDock, moveUpDock} from './Movement'\r\n\r\n\r\nvar afterDock;\r\nvar intervalTime = 500;\r\n\r\n\r\n\r\nfunction EnterDockingStation(callback){\r\n    //Enter DS\r\n    afterDock = false;\r\n    var loop;\r\n    \r\n    if(HasDistance(\"right\")) loop = setInterval(() => {\r\n    if(HasDistance(\"right\")) moveRight(afterDock);\r\n        else {\r\n            moveRightDock(afterDock);\r\n            clearInterval(loop);\r\n            if(HasDistance(\"up\")) loop = setInterval(() => {\r\n                if(HasDistance(\"up\")) moveUp(afterDock);\r\n                else {\r\n                moveUpDock(afterDock);\r\n                clearInterval(loop);\r\n                callback();\r\n                }\r\n            }, intervalTime)\r\n            else loop = setInterval(() => {\r\n                if(HasDistance(\"down\")) moveDown(afterDock);\r\n                else {\r\n                    moveDownDock(afterDock);\r\n                    clearInterval(loop);\r\n                    callback();\r\n                }\r\n            }, intervalTime)\r\n        }\r\n    }, intervalTime)\r\n\r\n    else loop = setInterval(() => {\r\n        if(HasDistance(\"left\")) moveLeft(afterDock);\r\n        else {\r\n            moveLeftDock(afterDock);\r\n            clearInterval(loop);\r\n            if(HasDistance(\"up\")) loop = setInterval(() => {\r\n                if(HasDistance(\"up\")) moveUp(afterDock);\r\n                else {\r\n                moveUpDock(afterDock);\r\n                clearInterval(loop);\r\n                callback();\r\n                }\r\n            }, intervalTime)\r\n            else loop = setInterval(() => {\r\n                if(HasDistance(\"down\")) moveDown(afterDock);\r\n                else {\r\n                    moveDownDock(afterDock);\r\n                    clearInterval(loop);\r\n                    callback();\r\n                }\r\n            }, intervalTime)\r\n        }\r\n    }, intervalTime)\r\n\r\n}\r\n\r\nfunction MoveToStart(callback){\r\n    //Move to starting point(0, 0)\r\n    afterDock = true;\r\n    var loop;\r\n\r\n    loop = setInterval(() => {\r\n        if(RTC.x > 0) moveLeft(afterDock);\r\n        else {\r\n            clearInterval(loop);\r\n            loop = setInterval(() => {\r\n                if(RTC.y > 0) moveUp(afterDock);\r\n                else {\r\n                    clearInterval(loop);\r\n                    console.log(\"On start\");\r\n                    callback();\r\n                }\r\n            }, intervalTime)\r\n        }\r\n    }, intervalTime)\r\n}\r\n\r\n\r\nfunction CleanRoom(){\r\n    //Clean whole room\r\n    afterDock = true;\r\n    var loop;\r\n    loop = setInterval(() => {\r\n        if(RTC.y < map.height + RTC.h)\r\n        if(RTC.x < map.width-RTC.w) moveRight(afterDock);\r\n        else {\r\n            moveDown(afterDock);\r\n            clearInterval(loop);\r\n            loop = setInterval(() => {\r\n            if(RTC.x > 0) moveLeft(afterDock);\r\n            else{\r\n                moveDown(afterDock);\r\n                clearInterval(loop);\r\n                CleanRoom();\r\n            }\r\n        }, intervalTime)\r\n        }\r\n        else {\r\n            clearInterval(loop);\r\n            console.log(\"Finished cleaning\");\r\n        }\r\n    }, intervalTime)\r\n}\r\n\r\nfunction StartCleaning(){\r\n    //Go to start point(0, 0) after Docking to DS, then clean whole room\r\n    MoveToStart(CleanRoom);\r\n}\r\n\r\nexport default function ClearRoom(){ \r\n    //main cleaning function; first enter docking station, then go to start point(0, 0), then clean whole room\r\n    map.style.backgroundColor = \"#FEC3C3\";\r\n    EnterDockingStation(StartCleaning);\r\n}\r\n\r\n\r\n\r\n\r\n// function checkDistanceToDock(direction, afterDock){\r\n//     var margin;\r\n//     switch (direction) {\r\n//         case \"right\":\r\n//             if(RTC.x + 2*RTC.w < Dock.x) moveRight(afterDock);\r\n//             else {\r\n//                 margin = Dock.x-RTC.x-RTC.w;\r\n//                 clear(RTC);\r\n//                 RTC.x += margin;\r\n//                 ctx.fillStyle = \"#0d880d\";\r\n//                 fill(RTC);\r\n//             }\r\n//             break;\r\n//         case \"left\":\r\n//             if(RTC.x - RTC.w > Dock.x+Dock.w) moveLeft(afterDock);\r\n//             else {\r\n//                 margin = RTC.x-Dock.x-Dock.w;\r\n//                 clear(RTC);\r\n//                 RTC.x -= margin;\r\n//                 ctx.fillStyle = \"#0d880d\";\r\n//                 fill(RTC);\r\n//             }\r\n//             break;\r\n//         case \"up\":\r\n//             if(RTC.y - RTC.h > Dock.y+Dock.h) moveUp(afterDock);\r\n//             else {\r\n//                 margin = RTC.y-Dock.y-Dock.h;\r\n//                 clear(RTC);\r\n//                 RTC.y -= margin;\r\n//                 ctx.fillStyle = \"#0d880d\";\r\n//                 fill(RTC);\r\n//             }\r\n//             break;\r\n//         case \"down\":\r\n//             if(RTC.y + RTC.h < Dock.y) moveDown(afterDock);\r\n//             else {\r\n//                 margin = Dock.y-RTC.y-RTC.h;\r\n//                 clear(RTC);\r\n//                 RTC.y += margin;\r\n//                 ctx.fillStyle = \"#0d880d\";\r\n//                 fill(RTC);\r\n//             }\r\n//             break;\r\n//         default:\r\n//             break;\r\n//     }\r\n// }","import {RTC, Dock, obstacles} from './Generation'\r\nimport {fill, clear} from './Auxiliary'\r\nimport {ctx} from './Room'\r\n\r\n//If entered docking, clean the floor, if not - just move\r\nexport function moveRight(afterDock){\r\n    ctx.fillStyle = \"#D7FCD9\";\r\n    afterDock ? fill(RTC) : clear(RTC);\r\n    RTC.x += RTC.w;\r\n    ctx.fillStyle = \"#0d880d\";\r\n    fill(RTC);\r\n}\r\n\r\nexport function moveLeft(afterDock){\r\n    ctx.fillStyle = \"#D7FCD9\";\r\n    afterDock ? fill(RTC) : clear(RTC);\r\n    RTC.x -= RTC.w;\r\n    ctx.fillStyle = \"#0d880d\";\r\n    fill(RTC);\r\n}\r\n\r\nexport function moveUp(afterDock){\r\n    ctx.fillStyle = \"#D7FCD9\";\r\n    afterDock ? fill(RTC) : clear(RTC);\r\n    RTC.y -= RTC.h;\r\n    ctx.fillStyle = \"#0d880d\";\r\n    fill(RTC);\r\n}\r\n\r\nexport function moveDown(afterDock){\r\n    ctx.fillStyle = \"#D7FCD9\";\r\n    afterDock ? fill(RTC) : clear(RTC);\r\n    RTC.y += RTC.h;\r\n    ctx.fillStyle = \"#0d880d\";\r\n    fill(RTC);\r\n}\r\n\r\nexport function moveUpDock(){\r\n    clear(RTC);\r\n    RTC.y -= RTC.y-Dock.y-Dock.h;\r\n    ctx.fillStyle = \"#0d880d\";\r\n    fill(RTC);\r\n}\r\n\r\nexport function moveDownDock(){\r\n    clear(RTC);\r\n    RTC.y += Dock.y+Dock.h-RTC.y-RTC.h;\r\n    ctx.fillStyle = \"#0d880d\";\r\n    fill(RTC);\r\n}\r\n\r\nexport function moveRightDock(){\r\n    clear(RTC);\r\n    RTC.x += Dock.x-RTC.x-RTC.w;\r\n    ctx.fillStyle = \"#0d880d\";\r\n    fill(RTC);\r\n}\r\n\r\nexport function moveLeftDock(){\r\n    clear(RTC);\r\n    RTC.x -= RTC.x-Dock.x-Dock.w;\r\n    ctx.fillStyle = \"#0d880d\";\r\n    fill(RTC);\r\n}\r\n\r\nexport function HasDistance(direction){\r\n    switch (direction){\r\n    case \"right\": \r\n            if(RTC.x + 2*RTC.w < Dock.x) return true;\r\n            else return false;\r\n    case \"left\": \r\n            if(RTC.x - RTC.w > Dock.x+Dock.w) return true;\r\n            else return false;\r\n    case \"up\": \r\n            if(RTC.y - RTC.h > Dock.y+Dock.h) return true;\r\n            else return false;\r\n    case \"down\": \r\n            if(RTC.y + RTC.h < Dock.y) return true;\r\n            else return false;\r\n    default: \r\n            return true;\r\n    }\r\n}","import React, { Component } from 'react'\nimport './App.css';\nimport { GenerateObstacles, GenerateRTC } from './Functions/Generation';\nimport Room, {SwitchMode, GenerateRoom, ResetRoom} from './Functions/Room'\nimport {ClearCanvas} from './Functions/Auxiliary'\nimport ClearRoom from './Functions/Simulation'\n\n\nclass App extends Component {\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header>\n          <button className=\"ModeButton\" onClick={SwitchMode}>Dark/Light mode</button>    \n            <h1 className=\"mainTitle\">RTC Simulation</h1>\n      </header>    \n      <div className=\"controlButtonsBlock\">               \n        <button className=\"controlButton\" onClick={GenerateRoom}>Generate room</button>\n        <button className=\"controlButton\" onClick={ResetRoom}>Reset room</button>\n        <button className=\"controlButton\" onClick={GenerateObstacles}>Generate obstacles</button>\n        <button className=\"controlButton\" onClick={GenerateRTC}>Generate RTC and DS</button>\n        <button className=\"controlButton\" onClick={ClearCanvas}>Clear canvas</button>\n        <button className=\"controlButton\" id=\"controlBut\" onClick={ClearRoom}>Start Cleaning</button>\n      </div>       \n      <Room />\n\n      <footer>\n        <p className=\"footerText\">© Made by Adri9wa, inspired by Anatolii</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}